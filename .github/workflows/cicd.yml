name: CICD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

        - name: Write .env file
        run: |
          echo "REACT_APP_NAME=${{ secrets.REACT_APP_NAME }}" > .env
          echo "REACT_APP_ROLL=${{ secrets.REACT_APP_ROLL }}" >> .env
          echo "REACT_APP_CLASS=${{ secrets.REACT_APP_CLASS }}" >> .env
          echo "REACT_APP_BIO=${{ secrets.REACT_APP_BIO }}" >> .env


      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t zaid57/reactjs-app .
      - name: Publish image to docker hub
        run: docker push zaid57/reactjs-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 Via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull zaid57/reactjs-app:latest
            docker rm -f reactContainer || true
             # Write .env file inside EC2
            echo "REACT_APP_NAME=${{ secrets.REACT_APP_NAME }}" > .env
            echo "REACT_APP_ROLL=${{ secrets.REACT_APP_ROLL }}" >> .env
            echo "REACT_APP_CLASS=${{ secrets.REACT_APP_CLASS }}" >> .env

            # Run new container with env file
            docker run --env-file .env -d -p 3000:80 --name reactContainer zaid57/reactjs-app:latest
